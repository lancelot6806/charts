# Default values for geoipapi

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: harbor.ntppool.org/ntppool/geoipapi
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

annotations:
  # vault.hashicorp.com/agent-inject: "true"
  # vault.hashicorp.com/agent-inject-containers: "geoip"
  # vault.hashicorp.com/agent-pre-populate-only: "true"
  # vault.hashicorp.com/agent-run-as-same-user: "true"
  # vault.hashicorp.com/agent-inject-secret-config: "kv/ntppool/geoip/config"
  # vault.hashicorp.com/agent-inject-template-config: |
  #   {{ with secret "kv/ntppool/geoip/config" -}}
  #     export GEOIPUPDATE_ACCOUNT_ID="{{ .Data.data.account_id }}"
  #     export GEOIPUPDATE_LICENSE_KEY="{{ .Data.data.license_key }}"
  #   {{- end }}
  # vault.hashicorp.com/ca-cert: /vault/tls/ca.crt
  # vault.hashicorp.com/role: ntppool-geoip
  # vault.hashicorp.com/tls-secret: vault-kube-ca

geoipupdate:
  # configure here or via a script path
  # account_id: 123
  # license_key:

  # https://www.vaultproject.io/docs/platform/k8s/injector/examples
  # config_script: /vault/secrets/config

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources:
  limits:
    cpu: 300m
    memory: 100Mi
  requests:
    cpu: 20m
    memory: 10Mi

nodeSelector: {}

tolerations: []

affinity:
  {}
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #   - labelSelector:
  #       matchExpressions:
  #       - key: tier
  #         operator: In
  #         values:
  #         - geoip
  #     topologyKey: kubernetes.io/hostname
